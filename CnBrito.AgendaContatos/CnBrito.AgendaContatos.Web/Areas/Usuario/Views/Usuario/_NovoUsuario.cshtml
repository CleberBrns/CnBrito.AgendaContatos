@model CnBrito.AgendaContatos.Model.Usuario.UsuarioModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

    <div class="form-horizontal">

        <div class="campos" style="padding: 2% 0 2% 5%">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="form-group">
            <div class="text-right col-md-10">
                <button type="button" class="btn btn-primary" id="btnRetornar" name="btnRetornar"
                        onclick="NovoUsuario.CloseModal()">
                    <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>Retornar
                </button>
                <button type="button" class="btn btn-primary" id="btnSalvar" 
                        onclick="NovoUsuario.Cadastrar()">
                    Salvar <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>
                </button>
            </div>
        </div>
    </div>
}

<style>
    .dialogWide > .modal-dialog {
        width: 35% !important;
    }
</style>

<script>

    var NovoUsuario = {

        Cadastrar: function () {

            $.ajax({
                url: "@Url.Action("Cadastrar", "Usuario")",
                type: "POST",
                data: $('form').serialize(),
                success: function (result) {

                    var retorno = result.mensagensRetorno;
                    if (retorno == null || retorno == undefined) {

                        bootbox.hideAll();

                        bootbox.dialog({
                            className: "dialogWide",
                            title: "Cadastrar Usuário",
                            message: result
                        });
                    }
                    else {

                        if (retorno.Status) {
                            swal({
                                title: '',
                                text: retorno.MensagemExibicao,
                                type: 'success',
                                confirmButtonColor: '#10386B',
                                allowOutsideClick: false
                            }).then(function () {
                                bootbox.hideAll();
                                funcoesIndexTabs.listaUsuarios($(".abaUsuarios"), false);
                            });
                        }
                        else {

                            swal({
                                title: '',
                                text: retorno.MensagemExibicao,
                                type: 'warning',
                                confirmButtonColor: '#10386B',
                                allowOutsideClick: false
                            });
                            console.log(retorno.MensagemAnalise);
                        }
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    validacao.errorAjax(jqXHR, textStatus, errorThrown);
                }
            });

        },

        CloseModal: function () {
            bootbox.hideAll();
        }
    }

</script>
